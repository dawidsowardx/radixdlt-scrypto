(function() {var implementors = {
"radix_engine":[["impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Iterator.html\" title=\"trait radix_engine::types::prelude::Iterator\">Iterator</a> for <a class=\"struct\" href=\"radix_engine/track/track/struct.TracedIterator.html\" title=\"struct radix_engine::track::track::TracedIterator\">TracedIterator</a>&lt;'a, 'b&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Iterator.html\" title=\"trait radix_engine::types::prelude::Iterator\">Iterator</a> for <a class=\"struct\" href=\"radix_engine/track/track/struct.TrackedIter.html\" title=\"struct radix_engine::track::track::TrackedIter\">TrackedIter</a>&lt;'a&gt;"],["impl&lt;K, V, U, O&gt; <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Iterator.html\" title=\"trait radix_engine::types::prelude::Iterator\">Iterator</a> for <a class=\"struct\" href=\"radix_engine/track/utils/struct.OverlayingIterator.html\" title=\"struct radix_engine::track::utils::OverlayingIterator\">OverlayingIterator</a>&lt;U, O&gt;<span class=\"where fmt-newline\">where\n    K: <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Ord.html\" title=\"trait radix_engine::types::prelude::Ord\">Ord</a>,\n    U: <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Iterator.html\" title=\"trait radix_engine::types::prelude::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.70.0/std/primitive.tuple.html\">(K, V)</a>&gt;,\n    O: <a class=\"trait\" href=\"radix_engine/types/prelude/trait.Iterator.html\" title=\"trait radix_engine::types::prelude::Iterator\">Iterator</a>&lt;Item = (K, <a class=\"enum\" href=\"radix_engine/types/prelude/enum.Option.html\" title=\"enum radix_engine::types::prelude::Option\">Option</a>&lt;V&gt;)&gt;,</span>"]],
"sbor":[],
"scrypto":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()